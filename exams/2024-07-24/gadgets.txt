0x0040100e: add [rax-0x7b], cl; shl byte ptr [rdx+rax-1], 0xd0; add rsp, 8; ret;
0x00401011: shl byte ptr [rdx+rax-1], 0xd0; add rsp, 8; ret;
0x00401014: call rax;
0x0040105b: sar edi, 0xff; call qword ptr [rax-0x5e1f00d];
0x0040115b: sar esi, 0xff; call qword ptr [rax-0x5e1f00d];
0x004011be: call qword ptr [rax-0x5e1f00d];
0x00401386: add dil, dil; adc eax, 0x2c62; hlt; nop; endbr64; ret;
0x00401387: add bh, bh; adc eax, 0x2c62; hlt; nop; endbr64; ret;
0x00401389: adc eax, 0x2c62; hlt; nop; endbr64; ret;
0x0040138b: sub al, 0; add ah, dh; nop; endbr64; ret;
0x0040138c: add [rax], al; hlt; nop; endbr64; ret;
0x0040138d: add ah, dh; nop; endbr64; ret;
0x0040138e: hlt; nop; endbr64; ret;
0x0040138f: nop; endbr64; ret;
0x004013b6: or [rdi+0x404010], edi; jmp rax;
0x004013be: xchg ax, ax; ret;
0x004013f9: mov edi, 0x404010; jmp rax;
0x004013fe: jmp rax;
0x00401425: inc esi; add eax, 0x2c1b; add [rbp-0x3d], ebx; nop; ret;
0x00401426: mov byte ptr [rip+0x2c1b], 1; pop rbp; ret;
0x00401427: add eax, 0x2c1b; add [rbp-0x3d], ebx; nop; ret;
0x00401428: sbb ebp, [rax+rax]; add [rcx], al; pop rbp; ret;
0x00401429: sub al, 0; add [rcx], al; pop rbp; ret;
0x0040142a: add [rax], al; add [rbp-0x3d], ebx; nop; ret;
0x0040142b: add [rcx], al; pop rbp; ret;
0x0040142c: add [rbp-0x3d], ebx; nop; ret;
0x0040142f: nop; ret;
0x00401575: mov rax, [rbp-8]; mov byte ptr [rax], 0; mov rdx, [rbp-0x20]; lea rax, [rbp-0x20]; mov rdi, rax; call rdx;
0x00401576: mov eax, [rbp-8]; mov byte ptr [rax], 0; mov rdx, [rbp-0x20]; lea rax, [rbp-0x20]; mov rdi, rax; call rdx;
0x00401578: clc; mov byte ptr [rax], 0; mov rdx, [rbp-0x20]; lea rax, [rbp-0x20]; mov rdi, rax; call rdx;
0x00401579: mov byte ptr [rax], 0; mov rdx, [rbp-0x20]; lea rax, [rbp-0x20]; mov rdi, rax; call rdx;
0x0040157a: add [rax], al; mov rdx, [rbp-0x20]; lea rax, [rbp-0x20]; mov rdi, rax; call rdx;
0x0040157c: mov rdx, [rbp-0x20]; lea rax, [rbp-0x20]; mov rdi, rax; call rdx;
0x0040157d: mov edx, [rbp-0x20]; lea rax, [rbp-0x20]; mov rdi, rax; call rdx;
0x00401580: lea rax, [rbp-0x20]; mov rdi, rax; call rdx;
0x00401581: lea eax, [rbp-0x20]; mov rdi, rax; call rdx;
0x00401584: mov rdi, rax; call rdx;
0x00401585: mov edi, eax; call rdx;
0x00401587: call rdx;
0x004015b1: mov eax, 0; leave; ret;
0x004015b2: add [rax], al; add [rax], al; leave; ret;
0x004015b3: add [rax], al; add cl, cl; ret;
0x004015b4: add [rax], al; leave; ret;
0x004015b5: add cl, cl; ret;
0x0040163b: call qword ptr [rax+0xff3c3c9];
0x0040163c: nop; leave; ret;
0x0040163d: leave; ret;
0x00401739: add al, ch; sar edx, 0xff; jmp qword ptr [rsi-0x77];
0x0040173b: sar edx, 0xff; jmp qword ptr [rsi-0x77];
0x0040173e: jmp qword ptr [rsi-0x77];
0x004018bb: call qword ptr [rax-0xfe17];
0x004018c1: call qword ptr [rax-0x146ffb15];
0x004018ed: add al, ch; sbb eax, 0x48fffffa; add esp, 0x38; pop r12; pop rbp; ret;
0x004018ef: sbb eax, 0x48fffffa; add esp, 0x38; pop r12; pop rbp; ret;
0x004018f3: add rsp, 0x38; pop r12; pop rbp; ret;
0x004018f4: add esp, 0x38; pop r12; pop rbp; ret;
0x004018f6: cmp [rcx+0x5c], al; pop rbp; ret;
0x004018f7: pop r12; pop rbp; ret;
0x004018f8: pop rsp; pop rbp; ret;
0x004018f9: pop rbp; ret;
0x0040192a: in al, dx; or al, ch; iretd;
0x0040192b: or al, ch; iretd;
0x0040192d: iretd;
0x00401937: xor ebx, ebx; nop [rax]; mov rdx, r14; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401939: nop [rax]; mov rdx, r14; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x0040193b: add byte ptr [rax], 0; add [rax], al; mov rdx, r14; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x0040193c: add [rax], al; add [rax], al; mov rdx, r14; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x0040193d: add [rax], al; add [rcx+rcx*4-0xe], cl; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x0040193e: add [rax], al; mov rdx, r14; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x0040193f: add [rcx+rcx*4-0xe], cl; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401940: mov rdx, r14; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401941: mov edx, esi; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401943: mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401944: mov esi, ebp; mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401945: out dx, al; mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401946: mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401947: mov edi, esp; call qword ptr [r15+rbx*8];
0x00401948: out 0x41, eax; call qword ptr [rdi+rbx*8];
0x00401949: call qword ptr [r15+rbx*8];
0x0040194a: call qword ptr [rdi+rbx*8];
0x0040194c: fisttp word ptr [rax-0x7d], st; ret;
0x00401959: or [rbx+0x5d], bl; pop r12; pop r13; pop r14; pop r15; ret;
0x0040195b: pop rbp; pop r12; pop r13; pop r14; pop r15; ret;
0x0040195c: pop r12; pop r13; pop r14; pop r15; ret;
0x0040195d: pop rsp; pop r13; pop r14; pop r15; ret;
0x0040195e: pop r13; pop r14; pop r15; ret;
0x0040195f: pop rbp; pop r14; pop r15; ret;
0x00401960: pop r14; pop r15; ret;
0x00401961: pop rsi; pop r15; ret;
0x00401962: pop r15; ret;
0x00401963: pop rdi; ret;
0x00401966: nop [rax+rax]; endbr64; ret;
0x00401967: nop [rax+rax]; endbr64; ret;
0x00401968: nop [rax+rax]; endbr64; ret;
0x0040196a: test [rax], al; add [rax], al; add [rax], al; endbr64; ret;
0x0040196b: add [rax], al; add [rax], al; add bl, dh; nop edx, edi; ret;
0x0040196c: add [rax], al; add [rax], al; endbr64; ret;
0x0040196d: add [rax], al; add bl, dh; nop edx, edi; ret;
0x0040196e: add [rax], al; endbr64; ret;
0x0040196f: add bl, dh; nop edx, edi; ret;
0x00401970: endbr64; ret;
0x00401971: nop edx, edi; ret;
0x00401973: cli; ret;
0x00401975: add [rax], al; add bl, dh; nop edx, edi; sub rsp, 8; add rsp, 8; ret;
0x00401976: add [rax], al; endbr64; sub rsp, 8; add rsp, 8; ret;
0x00401977: add bl, dh; nop edx, edi; sub rsp, 8; add rsp, 8; ret;
0x00401978: endbr64; sub rsp, 8; add rsp, 8; ret;
0x00401979: nop edx, edi; sub rsp, 8; add rsp, 8; ret;
0x0040197b: cli; sub rsp, 8; add rsp, 8; ret;
0x0040197c: sub rsp, 8; add rsp, 8; ret;
0x0040197d: sub esp, 8; add rsp, 8; ret;
0x00401980: add rsp, 8; ret;
0x00401981: add esp, 8; ret;
0x00401984: ret;
