0x00401008: and eax, [rax]; add [rax-0x7b], cl; shl byte ptr [rdx+rax-1], 0xd0; add rsp, 8; ret;
0x0040100a: add [rax-0x7b], cl; shl byte ptr [rdx+rax-1], 0xd0; add rsp, 8; ret;
0x0040100d: shl byte ptr [rdx+rax-1], 0xd0; add rsp, 8; ret;
0x00401010: call rax;
0x00401032: ret 0x23;
0x00401182: add dil, dil; adc eax, 0x2246; hlt; nop [rax+rax]; ret;
0x00401183: add bh, bh; adc eax, 0x2246; hlt; nop [rax+rax]; ret;
0x00401185: adc eax, 0x2246; hlt; nop [rax+rax]; ret;
0x00401186: and r8b, [rax]; add ah, dh; nop [rax+rax]; ret;
0x00401187: and al, [rax]; add ah, dh; nop [rax+rax]; ret;
0x00401188: add [rax], al; hlt; nop [rax+rax]; ret;
0x00401189: add ah, dh; nop [rax+rax]; ret;
0x0040118a: hlt; nop [rax+rax]; ret;
0x004011b6: or [rdi+0x4034a0], edi; jmp rax;
0x004011be: xchg ax, ax; ret;
0x004011bf: nop; ret;
0x004011f9: mov edi, 0x4034a0; jmp rax;
0x004011fe: jmp rax;
0x00401221: inc esi; add eax, 0x229f; add [rbp-0x3d], ebx; nop [rax+rax]; ret;
0x00401222: mov byte ptr [rip+0x229f], 1; pop rbp; ret;
0x00401223: add eax, 0x229f; add [rbp-0x3d], ebx; nop [rax+rax]; ret;
0x00401224: lahf; and al, [rax]; add [rcx], al; pop rbp; ret;
0x00401225: and al, [rax]; add [rcx], al; pop rbp; ret;
0x00401226: add [rax], al; add [rbp-0x3d], ebx; nop [rax+rax]; ret;
0x00401227: add [rcx], al; pop rbp; ret;
0x00401228: add [rbp-0x3d], ebx; nop [rax+rax]; ret;
0x00401229: pop rbp; ret;
0x0040122b: nop [rax+rax]; ret;
0x0040122d: add [rax], r8b; ret;
0x0040122e: add [rax], al; ret;
0x004012a8: call qword ptr [rax+0x4855c3c9];
0x004012a9: nop; leave; ret;
0x004013b2: jmp qword ptr [rsi-0x77];
0x00401516: call qword ptr [rax-0xe717];
0x0040151c: dec ecx; ret;
0x0040151d: leave; ret;
0x00401553: xor ebx, ebx; nop [rax]; mov rdx, r14; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401555: nop [rax]; mov rdx, r14; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401557: add [rcx+rcx*4-0xe], cl; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401558: mov rdx, r14; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401559: mov edx, esi; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x0040155b: mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x0040155c: mov esi, ebp; mov edi, r12d; call qword ptr [r15+rbx*8];
0x0040155d: out dx, al; mov edi, r12d; call qword ptr [r15+rbx*8];
0x0040155e: mov edi, r12d; call qword ptr [r15+rbx*8];
0x0040155f: mov edi, esp; call qword ptr [r15+rbx*8];
0x00401560: out 0x41, eax; call qword ptr [rdi+rbx*8];
0x00401561: call qword ptr [r15+rbx*8];
0x00401562: call qword ptr [rdi+rbx*8];
0x00401564: fisttp word ptr [rax-0x7d], st; ret;
0x00401571: or [rbx+0x5d], bl; pop r12; pop r13; pop r14; pop r15; ret;
0x00401573: pop rbp; pop r12; pop r13; pop r14; pop r15; ret;
0x00401574: pop r12; pop r13; pop r14; pop r15; ret;
0x00401575: pop rsp; pop r13; pop r14; pop r15; ret;
0x00401576: pop r13; pop r14; pop r15; ret;
0x00401577: pop rbp; pop r14; pop r15; ret;
0x00401578: pop r14; pop r15; ret;
0x00401579: pop rsi; pop r15; ret;
0x0040157a: pop r15; ret;
0x0040157b: pop rdi; ret;
0x0040157d: nop [rax]; ret;
0x00401582: add [rax], al; sub rsp, 8; add rsp, 8; ret;
0x00401584: sub rsp, 8; add rsp, 8; ret;
0x00401585: sub esp, 8; add rsp, 8; ret;
0x00401588: add rsp, 8; ret;
0x00401589: add esp, 8; ret;
0x0040158c: ret;
